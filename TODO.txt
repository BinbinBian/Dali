HIGH PRIORITY:
-> row pluck must use views, not copies
-> softmax cross entropy should happen on GPU
-> implement 3 different ways of accessing data in TensorInternal:
    - mutable
    - read
    - overwrite (only allocate, do not refresh)
-> mshadow and tensors (mutli gpu support etc.)
-> visualizer - web frontend for error visualization (60% done)
-> Move Redis visualizer example to tests with check for redis presence
-> switch "from unique words" in Vocab to "add_words"

MEDIUM PRIORITY:
-> add test for numpy loading / saving
-> Improve NlpUtils. More generally agree on common set of practices for all the examples.

LOWER_PRIOTITY:
-> add performance test
-> refactor masked entropy
-> sequence loss
-> implement imagenet training
-> load existing image net model from caffe
-> make machine comprehension dataset inline with other loading system
-> made n-d print visually closer to numpy's n-d print
